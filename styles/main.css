/* Do It (Later) - Main Styles */
/* Phase 1: Basic responsive foundation */

:root {
  --primary-color: #3b82f6;
  --success-color: #10b981;
  --notebook-yellow: #f9f7ed;
  --background: #1a1a1a;
  --surface: #2a2a2a;
  --text: #e8e8e8;
  --text-muted: rgba(232, 232, 232, 0.7);
  --text-tertiary: rgba(232, 232, 232, 0.6);
  --border: #404040;
  --shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.3);

  /* Directional transitions - faster for light→dark */
  --transition-speed: 400ms;
  --transition-ease: cubic-bezier(0.23, 1, 0.32, 1);
  --bg-delay: 50ms;
  --text-delay: 0ms;
}

/* Light mode - warm and calming */
.light-theme {
  --primary-color: #4f46e5;
  --success-color: #059669;
  --notebook-yellow: #8b7355;
  --background: #ffffff;
  --surface: #f2f1ee;
  --text: #1a1a1a;
  --text-muted: rgba(26, 26, 26, 0.7);
  --text-tertiary: rgba(26, 26, 26, 0.6);
  --border: #e0ddd6;
  --shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1);

  /* Directional transitions - slower for dark→light */
  --transition-speed: 600ms;
  --transition-ease: cubic-bezier(0.25, 0.46, 0.45, 0.94);
  --bg-delay: 0ms;
  --text-delay: 100ms;
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  /* Remove tap highlight on mobile */
  -webkit-tap-highlight-color: transparent;
}

/* Remove focus outline on touch devices, keep for keyboard navigation */
@media (hover: none) {
  button:focus,
  .task-item:focus,
  .sync-btn:focus,
  .nav-btn:focus,
  .add-button:focus,
  .delete-mode-toggle:focus {
    outline: none;
  }
}

body {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  line-height: 1.6;
  color: var(--text);
  background-color: var(--background);
  min-height: 100vh;
  transition:
    background-color var(--transition-speed) var(--transition-ease) var(--bg-delay),
    color var(--transition-speed) var(--transition-ease) var(--text-delay);
}

#app {
  max-width: 800px;
  margin: 0 auto;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
}

header {
  padding: clamp(16px, 4vw, 24px) clamp(20px, 5vw, 32px) clamp(12px, 3vw, 20px);
  text-align: center;
  border-bottom: 1px solid var(--border);
  transition: border-color var(--transition-speed) var(--transition-ease) var(--bg-delay);
}

.header-top {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: clamp(4px, 1vw, 8px);
}

.app-title {
  font-size: clamp(24px, 4vw, 28px);
  font-weight: 600;
  color: var(--text);
  margin: 0;
  transition: color var(--transition-speed) var(--transition-ease) var(--text-delay);
}

.header-metadata {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: clamp(12px, 2vw, 20px);
  gap: 1rem;
}

.date {
  font-size: clamp(14px, 2.5vw, 15px);
  font-weight: 400;
  color: var(--text-muted);
  transition: color var(--transition-speed) var(--transition-ease) var(--text-delay);
}

.task-count {
  font-size: clamp(13px, 2.3vw, 14px);
  font-weight: 500;
  color: var(--text-tertiary);
  transition: color var(--transition-speed) var(--transition-ease) var(--text-delay);
}

/* Theme toggle */
.theme-toggle {
  background: none;
  border: none;
  cursor: pointer;
  padding: 0.25rem;
  border-radius: 20px;
  transition: background 0.2s ease;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.25rem;
}

.theme-toggle:hover {
  background: rgba(255, 255, 255, 0.1);
}

.light-theme .theme-toggle:hover {
  background: rgba(0, 0, 0, 0.05);
}

.toggle-track {
  width: 36px;
  height: 20px;
  background: var(--border);
  border-radius: 10px;
  position: relative;
  transition: background 0.3s ease;
}

.toggle-thumb {
  width: 16px;
  height: 16px;
  background: var(--surface);
  border-radius: 50%;
  position: absolute;
  top: 2px;
  left: 2px;
  transition: transform 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  border: 1px solid var(--border);
}

.theme-icon {
  transition: opacity 0.3s ease;
}

.theme-icon-dark {
  opacity: 1;
}

.theme-icon-light {
  opacity: 0;
  position: absolute;
}

.light-theme .theme-icon-dark {
  opacity: 0;
}

.light-theme .theme-icon-light {
  opacity: 1;
}

.light-theme .toggle-thumb {
  transform: translateX(16px);
}

.light-theme .toggle-track {
  background: var(--primary-color);
}

.theme-label {
  color: var(--text-muted);
  font-size: 0.7rem;
  transition: color 0.4s ease;
}

/* Section headers with delete mode */
.section-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1rem;
}

.section-header h2 {
  font-size: clamp(18px, 3vw, 20px);
  font-weight: 500;
  color: var(--text);
  margin: 0;
  transition: color var(--transition-speed) var(--transition-ease) var(--text-delay);
}

.delete-mode-toggle {
  background: transparent;
  border: 1px solid var(--border);
  color: var(--text-muted);
  border-radius: 6px;
  padding: 0.4rem;
  cursor: pointer;
  transition: all 0.2s ease;
  opacity: 0.6;
}

.delete-mode-toggle:hover {
  background: var(--surface);
  color: var(--text);
  opacity: 1;
  border-color: #dc2626;
  transform: translateY(-1px);
}

.delete-mode-toggle:active {
  transform: skewX(3deg) scaleX(0.97) translateY(0px);
  transition: transform 0.1s ease;
}

.delete-mode-toggle.active {
  background: #dc2626;
  color: white;
  border-color: #dc2626;
  opacity: 1;
}

.delete-mode-toggle.active:hover {
  filter: brightness(1.1);
  transform: translateY(-1px);
}

.delete-mode-toggle.active:active {
  transform: skewX(3deg) scaleX(0.97) translateY(0px);
  transition: transform 0.1s ease;
}

/* Delete mode styles */
.delete-mode .task-item {
  cursor: pointer;
}

/* Only text background for delete mode - no double boxes */

/* Removed - text should not have independent transforms */

.delete-mode .task-actions {
  display: none;
}

.delete-mode-notice {
  background: rgba(220, 38, 38, 0.1);
  border: 1px solid rgba(220, 38, 38, 0.3);
  color: #dc2626;
  padding: 0.5rem;
  border-radius: 6px;
  font-size: 0.8rem;
  margin-bottom: 1rem;
  text-align: center;
}

/* Removed old date/counter styles - now handled by .date and .task-count */

main {
  flex: 1;
  padding: 1rem;
}

.lists-container {
  display: grid;
  gap: 2rem;
  height: 100%;
}

.list-section {
  background: var(--surface);
  border-radius: 8px;
  padding: 1.5rem;
  box-shadow: var(--shadow);
  border: 1px solid var(--border);
  transition:
    background-color var(--transition-speed) var(--transition-ease) var(--bg-delay),
    border-color var(--transition-speed) var(--transition-ease) var(--bg-delay),
    box-shadow var(--transition-speed) var(--transition-ease) var(--bg-delay);
  overflow: hidden !important;
  max-width: 100% !important;
  box-sizing: border-box !important;
}

/* Section headers now handled by .section-header h2 */

ul {
  list-style: none;
  margin-bottom: 1rem;
}

/* Task item styles */
.task-item {
  display: flex;
  align-items: center;
  padding: 0.5rem 0.5rem;
  margin: 0 -0.5rem 0.5rem -0.5rem;
  background: transparent;
  border-bottom: 1px solid var(--border);
  min-height: 44px;
  width: 100%;
  max-width: 100% !important; /* Force container width constraint */
  position: relative;
  overflow: hidden !important;
  box-sizing: border-box !important;
  cursor: pointer;
  transition: all 0.2s ease;
  border-radius: 4px;
}

/* Movement animations - faster transparency for page-to-page illusion */
.task-item.moving-out-right {
  opacity: 0;
  transform: translateX(100%);
  transition: opacity 0.1s ease-out, transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.task-item.moving-out-left {
  opacity: 0;
  transform: translateX(-100%);
  transition: opacity 0.1s ease-out, transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.task-item.moving-in-left {
  opacity: 0;
  transform: translateX(-100%);
  animation: slideInLeft 0.3s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.task-item.moving-in-right {
  opacity: 0;
  transform: translateX(100%);
  animation: slideInRight 0.3s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

@keyframes slideInLeft {
  0% {
    opacity: 0;
    transform: translateX(-100%);
  }
  75% {
    opacity: 0;
    transform: translateX(-20%);
  }
  90% {
    opacity: 1;
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideInRight {
  0% {
    opacity: 0;
    transform: translateX(100%);
  }
  75% {
    opacity: 0;
    transform: translateX(20%);
  }
  90% {
    opacity: 1;
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

/* Loading states */
.loading {
  position: relative;
  pointer-events: none;
  opacity: 0.7;
}

.loading::after {
  content: '';
  position: absolute;
  top: 50%;
  right: 8px;
  width: 16px;
  height: 16px;
  border: 2px solid var(--border);
  border-top: 2px solid var(--primary-color);
  border-radius: 50%;
  animation: spin 1s linear infinite;
  transform: translateY(-50%);
}

@keyframes spin {
  0% { transform: translateY(-50%) rotate(0deg); }
  100% { transform: translateY(-50%) rotate(360deg); }
}

/* Subtle pulse for counter updates */
.counter-update {
  animation: pulse 0.3s ease-out;
}

@keyframes pulse {
  0% { transform: scale(1); }
  50% { transform: scale(1.05); }
  100% { transform: scale(1); }
}

.task-item.completed {
  opacity: 0.6;
}

.task-item.completed .task-text {
  text-decoration: line-through;
  color: var(--text-muted);
  position: relative;
}

.task-item.completed .task-text::before {
  content: '✓';
  position: absolute;
  left: -1.2rem;
  color: var(--success-color);
  font-weight: bold;
  opacity: 1;
  pointer-events: none;
}

/* Performance optimizations */
.task-item,
.move-icon,
.task-text,
.notebook-input {
  will-change: transform, opacity;
}

.task-item.moving-out,
.task-item.moving-in {
  will-change: transform, opacity;
}

/* Clean up will-change after animations */
.task-item:not(.moving-out):not(.moving-in):not(.completed) {
  will-change: auto;
}

/* Respect user's motion preferences */
@media (prefers-reduced-motion: reduce) {
  * {
    will-change: auto !important;
  }

  .task-item {
    transition: none;
  }

  /* Allow click feedback even with reduced motion */
  .task-item:active {
    transform: skewX(3deg) scaleX(0.97) translateY(0px);
    transition: transform 0.1s ease;
  }

  .task-item.completed .task-text::before {
    animation: none;
  }

  .task-item.completed {
    transform: none;
  }

  .task-text {
    transition: none;
  }

  /* Removed conflicting rule */

  .move-icon {
    transition: none;
  }

  .move-icon:hover,
  .move-icon:active {
    transform: none;
  }

  .notebook-input:focus {
    transform: none;
    box-shadow: none;
  }

  .task-text::after {
    display: none;
  }

  .loading::after {
    animation: none;
  }

  .counter-update {
    animation: none;
  }
}

.task-text {
  flex: 1;
  overflow: hidden !important;
  text-overflow: ellipsis !important;
  white-space: nowrap !important;
  line-height: 1.2;
  position: relative;
  margin-right: 0.5rem;
  min-width: 0 !important; /* Critical for flex item width constraint */
  pointer-events: none; /* Text is not interactive */
  transform: none !important; /* Text should never have its own transforms */
}

.task-actions {
  display: flex;
  gap: 0.25rem;
}

.move-icon {
  color: var(--text);
  cursor: pointer;
  font-size: 0.9rem;
  padding: 0.4rem;
  border-radius: 4px;
  user-select: none;
  transition: none;
  opacity: 0.8;
  min-width: 24px;
  min-height: 24px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.move-icon:active {
  transform: skewX(3deg) scaleX(0.97) translateY(0px);
  background: rgba(255, 255, 255, 0.1);
  transition: transform 0.1s ease, background 0.1s ease;
}

/* Task item push animation - shows direction it will move */
.task-item.pushing-right {
  animation: taskPushRight 0.3s ease-out;
}

.task-item.pushing-left {
  animation: taskPushLeft 0.3s ease-out;
}

@keyframes taskPushRight {
  0% { transform: translateX(0); }
  30% { transform: translateX(15px) skewX(-3deg); }
  100% { transform: translateX(0); }
}

@keyframes taskPushLeft {
  0% { transform: translateX(0); }
  30% { transform: translateX(-15px) skewX(3deg); }
  100% { transform: translateX(0); }
}

/* Normal hover state - exact copy of delete button pattern */
.task-item:hover {
  background: var(--surface);
  color: var(--text);
  border-color: var(--text-muted);
  transform: translateY(-1px) !important;
}

/* Active/click state - exact copy of delete button pattern */
.task-item:active,
.task-item.button-pressed {
  transform: skewX(3deg) scaleX(0.97) translateY(0px) !important;
  transition: transform 0.1s ease !important;
}

/* Delete mode styles */
.list-section.delete-mode .task-item:hover {
  background: rgba(220, 38, 38, 0.15);
  transform: skewX(1deg) scaleX(0.98);
  color: #dc2626;
}

.list-section.delete-mode .task-item:active {
  background: rgba(220, 38, 38, 0.25);
  transform: skewX(2deg) scaleX(0.96) scaleY(0.94);
  transition: transform 0.1s ease;
}

/* Marquee removed - was causing text to move independently */

/* Ripple effect for touch interactions */
.task-text::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  border-radius: 50%;
  background: rgba(59, 130, 246, 0.3);
  transform: translate(-50%, -50%);
  transition: all 0.5s ease;
  pointer-events: none;
  opacity: 0;
}

.task-text.ripple::after {
  width: 200px;
  height: 200px;
  opacity: 1;
  transition: all 0.3s ease;
}

.task-text.ripple-fade::after {
  opacity: 0;
  transition: opacity 0.2s ease;
}

.empty-message {
  color: var(--text-muted);
  text-align: center;
  padding: 2rem 1rem;
  line-height: 1.6;
  font-size: 1rem;
}

.empty-message small {
  display: block;
  margin-top: 0.5rem;
  font-size: 0.85rem;
  opacity: 0.8;
}

.add-task-container {
  margin-bottom: 1rem;
}

.notebook-input {
  width: 100%;
  padding: 0.5rem 0;
  border: none;
  border-bottom: 1px solid var(--border);
  background: transparent;
  color: var(--text);
  font-size: 1rem;
  font-family: inherit;
  min-height: 44px;
  line-height: 1.5;
}

.notebook-input:focus {
  outline: none;
  border-bottom-color: var(--notebook-yellow);
}

.notebook-input::placeholder {
  color: var(--text-muted);
  font-style: italic;
}

.add-button {
  padding: 0.75rem 1rem;
  background: var(--primary-color);
  color: white;
  border: none;
  border-radius: 6px;
  font-size: 1rem;
  cursor: pointer;
  min-height: 44px; /* Touch-friendly */
  white-space: nowrap;
  transition: all 0.2s ease;
}

.add-button:hover {
  filter: brightness(1.1);
  transform: translateY(-1px);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
}

.add-button:active {
  transform: skewX(3deg) scaleX(0.97) translateY(0px);
  transition: transform 0.1s ease;
}

footer {
  padding: 1rem;
  text-align: center;
  border-top: 1px solid var(--border);
}

.sync-controls {
  display: flex;
  gap: 0.25rem;
  justify-content: center;
  margin-bottom: 1rem;
  flex-wrap: wrap;
}

.sync-btn {
  padding: 0.4rem 0.8rem;
  background: var(--surface);
  color: var(--text);
  border: 1px solid var(--border);
  border-radius: 6px;
  cursor: pointer;
  transition: all 0.2s ease;
  font-size: 0.8rem;
  min-height: 44px;
  display: flex;
  align-items: center;
  gap: 0.4rem;
  text-decoration: none;
}

.sync-btn svg {
  flex-shrink: 0;
  opacity: 0.8;
  transition: opacity 0.2s ease;
}

.sync-btn:hover svg {
  opacity: 1;
}

.sync-btn:hover {
  background: var(--background);
  border-color: var(--text-muted);
  transform: skewX(-2deg) translateY(-1px);
  filter: brightness(1.05);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

.sync-btn:active {
  transform: skewX(-2deg) scaleX(0.98) translateY(0px);
  transition: transform 0.1s ease;
}

/* Light theme subtle variations */
.light-theme .sync-btn:hover {
  background: #f8f8f8;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
}

.donation-section {
  margin: 0.5rem 0;
  padding: 0.5rem;
  border-radius: 6px;
  background: var(--surface);
  border: 1px solid var(--border);
  transition:
    background-color var(--transition-speed) var(--transition-ease) var(--bg-delay),
    border-color var(--transition-speed) var(--transition-ease) var(--bg-delay);
}

.donation-text {
  color: var(--text);
  font-size: 0.8rem;
  display: block;
  transition: color var(--transition-speed) var(--transition-ease) var(--text-delay);
}

.donation-link {
  color: var(--primary-color);
  text-decoration: none;
  font-weight: 500;
  margin-left: 0.25rem;
  transition: color var(--transition-speed) var(--transition-ease) var(--text-delay);
}

.donation-link:hover {
  text-decoration: underline;
  filter: brightness(1.1);
}

.storage-notice {
  color: var(--text-muted);
  font-size: 0.8rem;
}

/* Mobile navigation */
.mobile-nav {
  display: none;
  gap: 0.5rem;
  margin-top: 1rem;
  justify-content: center;
}

.nav-btn {
  padding: 0.5rem 1rem;
  border: 1px solid var(--border);
  background: transparent;
  color: var(--text);
  border-radius: 6px;
  cursor: pointer;
  transition: all 0.2s ease;
  min-height: 44px;
}

.nav-btn.active {
  background: var(--primary-color);
  color: white;
  border-color: var(--primary-color);
}

.nav-btn:hover {
  background: var(--surface);
  transform: translateY(-1px);
}

.nav-btn:active {
  transform: skewX(3deg) scaleX(0.97) translateY(0px);
  transition: transform 0.1s ease;
}

.nav-btn.active:hover {
  filter: brightness(1.1);
  transform: translateY(-1px);
}

.nav-btn.active:active {
  transform: skewX(3deg) scaleX(0.97) translateY(0px);
  transition: transform 0.1s ease;
}

/* Mobile optimizations */
@media (max-width: 767px) {
  .mobile-nav {
    display: flex;
  }

  .lists-container {
    grid-template-columns: 1fr;
    gap: 1.5rem;
  }

  .list-section {
    display: none;
    padding: 1.25rem;
  }

  .list-section.active {
    display: block;
  }

  .header-metadata {
    flex-direction: column;
    gap: 0.25rem;
    text-align: center;
  }

  .theme-toggle {
    gap: 0.15rem;
  }

  .theme-label {
    font-size: 0.6rem;
  }
}

/* Tablet and desktop optimizations */
@media (min-width: 768px) {
  .lists-container {
    grid-template-columns: 1fr 1fr;
    gap: 2rem;
  }

  .list-section {
    display: block !important;
    padding: 1.5rem;
  }

  .header-metadata {
    justify-content: space-between;
    text-align: left;
  }

  .date {
    text-align: left;
  }

  .task-count {
    text-align: right;
  }
}

/* Large desktop optimizations */
@media (min-width: 1024px) {
  header {
    padding: 24px 32px 20px;
  }

  .lists-container {
    gap: 2.5rem;
    max-width: 900px;
    margin: 0 auto;
  }

  .list-section {
    padding: 2rem;
  }
}

/* QR Modal Styles */
.qr-modal {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.8);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  animation: fadeIn 0.3s ease-out;
}

.qr-modal-content {
  background: var(--surface);
  border-radius: 12px;
  padding: 1.5rem;
  max-width: 450px;
  width: 90%;
  max-height: 85vh;
  overflow-y: auto;
  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
  animation: slideUp 0.3s ease-out;
  position: relative;
  border: 1px solid var(--border);
  margin: 1rem;
}

.qr-modal-title {
  font-size: 1.5rem;
  font-weight: 600;
  margin-bottom: 1rem;
  text-align: center;
  color: var(--text);
}

.qr-tabs {
  display: flex;
  gap: 0.25rem;
  margin-bottom: 1.25rem;
  background: var(--background);
  padding: 0.2rem;
  border-radius: 8px;
  border: 1px solid var(--border);
}

.qr-tab {
  flex: 1;
  padding: 0.6rem 0.75rem;
  background: transparent;
  border: none;
  border-radius: 6px;
  cursor: pointer;
  font-size: 0.85rem;
  font-weight: 500;
  color: var(--text-muted);
  transition: all 0.2s ease;
}

.qr-tab:hover {
  background: var(--surface);
  transform: skewX(-2deg);
  filter: brightness(1.05);
}

.qr-tab.active {
  background: var(--surface);
  color: var(--text);
  box-shadow: 0 2px 4px var(--shadow);
}

.qr-description {
  color: var(--text-muted);
  font-size: 0.9rem;
  margin-bottom: 1.5rem;
  text-align: center;
  line-height: 1.5;
}

.qr-code-container {
  display: flex;
  justify-content: center;
  margin-bottom: 1.5rem;
  padding: 1.5rem;
  background: white;
  border-radius: 8px;
}

.qr-actions {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
}

/* QR Button Styles */
.qr-btn {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  padding: 0.75rem 1.25rem;
  border: 1px solid var(--border);
  border-radius: 8px;
  cursor: pointer;
  font-size: 0.9rem;
  font-weight: 500;
  text-decoration: none;
  transition: all 0.2s ease;
  background: var(--surface);
  color: var(--text);
}

.qr-btn:hover {
  background: var(--background);
  transform: skewX(-2deg);
  filter: brightness(1.05);
}

.qr-btn:active {
  transform: skewX(-2deg) scaleX(0.98);
}

.qr-btn svg {
  width: 16px;
  height: 16px;
}

.qr-btn-primary {
  background: var(--primary-color);
  color: white;
  border-color: var(--primary-color);
}

.qr-btn-primary:hover {
  background: var(--primary-color);
  filter: brightness(1.1);
}

.qr-btn-secondary {
  background: var(--surface);
  color: var(--text);
  border-color: var(--border);
}

.qr-btn-success {
  background: var(--success-color);
  color: white;
  border-color: var(--success-color);
}

.qr-btn-success:hover {
  background: var(--success-color);
  filter: brightness(1.1);
}

.qr-btn-hidden {
  display: none !important;
}

.qr-close {
  position: absolute;
  top: 1rem;
  right: 1rem;
  background: transparent;
  border: none;
  cursor: pointer;
  padding: 0.5rem;
  border-radius: 50%;
  color: var(--text-muted);
  transition: all 0.2s ease;
}

.qr-close:hover {
  background: var(--background);
  color: var(--text);
  transform: rotate(90deg);
}

/* QR Modal Panel & Content Styles */
.qr-panel {
  display: block;
}

.qr-panel-hidden {
  display: none !important;
}

.qr-container {
  display: flex;
  justify-content: center;
  margin: 1.5rem 0;
  padding: 1.5rem;
  background: white;
  border-radius: 12px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

.qr-code-display {
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 200px;
  min-width: 200px;
}

.qr-loading {
  color: #666;
  font-size: 0.9rem;
  text-align: center;
}

.qr-stats {
  text-align: center;
  font-size: 0.8rem;
  color: var(--text-muted);
  margin-top: 1rem;
  padding-top: 1rem;
  border-top: 1px solid var(--border);
}

/* Camera & Scanning UI Styles */
.camera-controls {
  display: flex;
  gap: 0.75rem;
  justify-content: center;
  margin: 1.5rem 0;
}

.camera-area {
  margin: 1.5rem 0;
}

.camera-area-hidden {
  display: none !important;
}

.camera-container {
  position: relative;
  width: 100%;
  max-width: 300px;
  margin: 0 auto;
  border-radius: 12px;
  overflow: hidden;
  background: #000;
}

.camera-preview {
  width: 100%;
  height: auto;
  aspect-ratio: 4/3;
  object-fit: cover;
}

.scan-overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  pointer-events: none;
}

.scan-corner {
  position: absolute;
  width: 20px;
  height: 20px;
  border: 3px solid var(--primary-color);
}

.scan-corner-tl {
  top: 10px;
  left: 10px;
  border-right: none;
  border-bottom: none;
}

.scan-corner-tr {
  top: 10px;
  right: 10px;
  border-left: none;
  border-bottom: none;
}

.scan-corner-bl {
  bottom: 10px;
  left: 10px;
  border-right: none;
  border-top: none;
}

.scan-corner-br {
  bottom: 10px;
  right: 10px;
  border-left: none;
  border-top: none;
}

.scan-status {
  text-align: center;
  font-size: 0.9rem;
  color: var(--text-muted);
  margin-top: 1rem;
}

.scan-result {
  margin: 1.5rem 0;
  padding: 1rem;
  background: var(--background);
  border-radius: 8px;
  text-align: center;
}

.scan-result-hidden {
  display: none !important;
}

.scan-success {
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--success-color);
  font-weight: 500;
  margin-bottom: 1rem;
}

.scan-preview {
  font-size: 0.8rem;
  color: var(--text-muted);
  margin: 1rem 0;
  padding: 0.75rem;
  background: var(--surface);
  border-radius: 6px;
  border: 1px solid var(--border);
  font-family: monospace;
  word-break: break-all;
}

.scan-actions {
  display: flex;
  gap: 0.75rem;
  justify-content: center;
  margin-top: 1rem;
}

/* QR Modal Mobile Styles */
@media (max-width: 767px) {
  .qr-modal-content {
    padding: 1.5rem;
    max-width: 95%;
    max-height: 95vh;
  }

  .qr-modal-title {
    font-size: 1.25rem;
    margin-bottom: 0.75rem;
  }

  .qr-tabs {
    margin-bottom: 1rem;
  }

  .qr-tab {
    padding: 0.6rem;
    font-size: 0.85rem;
  }

  .qr-container {
    margin: 1rem 0;
    padding: 1rem;
  }

  .camera-container {
    max-width: 100%;
  }

  .camera-preview {
    aspect-ratio: 1;
  }

  .camera-controls {
    gap: 0.5rem;
    margin: 1rem 0;
  }

  .qr-btn {
    padding: 0.6rem 1rem;
    font-size: 0.85rem;
  }

  .scan-actions {
    flex-direction: column;
    gap: 0.5rem;
  }
}

/* QR Modal Animations */
@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes slideUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
